-- ‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Lazy.nvim (–º–µ–Ω–µ–¥–∂–µ—Ä –ø–ª–∞–≥–∏–Ω–æ–≤)
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({
    "git", "clone", "--filter=blob:none",
    "https://github.com/folke/lazy.nvim.git", "--branch=stable", lazypath
  })
end
vim.opt.rtp:prepend(lazypath)

require("lazy").setup({
'navarasu/onedark.nvim',
"folke/tokyonight.nvim",

  -- üöÄ LSP (Language Server Protocol)
  "neovim/nvim-lspconfig",

  -- ‚ö°Ô∏è –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (nvim-cmp)
  "hrsh7th/nvim-cmp",
  "hrsh7th/cmp-nvim-lsp",
  "hrsh7th/cmp-buffer",
  "hrsh7th/cmp-path",
  "hrsh7th/cmp-cmdline",

  -- üñå –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ (Treesitter)
  { "nvim-treesitter/nvim-treesitter", build = ":TSUpdate" },

  -- üìÇ –î–µ—Ä–µ–≤–æ –ø—Ä–æ–µ–∫—Ç–∞ (NvimTree)
  "nvim-tree/nvim-tree.lua",

  -- üíª –¢–µ—Ä–º–∏–Ω–∞–ª –≤–Ω—É—Ç—Ä–∏ Neovim
  "akinsho/toggleterm.nvim",

  -- üîç –ü–æ–∏—Å–∫ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è
  "nvim-telescope/telescope.nvim",

  -- üß† –ù–µ–π—Ä–æ—Å–µ—Ç–∏ (Copilot, Codeium)
{ 'codota/tabnine-nvim', build = "./dl_binaries.sh" },
"ray-x/telescope-ast-grep.nvim",
"xavierchow/nvim-sshfs",
"TimUntersberger/neogit",  -- Git UI –∫–∞–∫ –≤ LazyGit
  "nvim-lua/plenary.nvim",
})

-- ‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º LSP-—Å–µ—Ä–≤–µ—Ä—ã –¥–ª—è Python, Go, JSON, YAML, HTML
local lspconfig = require("lspconfig")
local servers = { "pyright", "gopls", "jsonls", "yamlls", "html" }
for _, server in ipairs(servers) do
    lspconfig[server].setup({})
end

require("nvim-treesitter.configs").setup({
  highlight = { enable = true },
})

-- ‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (nvim-cmp)
local cmp = require("cmp")
cmp.setup({
  completion = {
    autocomplete = false, -- –û–¢–ö–õ–Æ–ß–ê–ï–ú –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ
  },
  mapping = {
    ["<C-u>"] = cmp.mapping.complete(), -- –í—Ä—É—á–Ω—É—é –≤—ã–∑–≤–∞—Ç—å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    ["<CR>"] = cmp.mapping.confirm({ select = true }), -- –ü—Ä–∏–Ω—è—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É
    ["<Tab>"] = cmp.mapping.select_next_item(), -- –í–ø–µ—Ä—ë–¥ –ø–æ —Å–ø–∏—Å–∫—É
    ["<S-Tab>"] = cmp.mapping.select_prev_item(), -- –ù–∞–∑–∞–¥ –ø–æ —Å–ø–∏—Å–∫—É
  },
  sources = {
    { name = "nvim_lsp" },
    { name = "buffer" },
    { name = "path" },
  },
})
-- ‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º NvimTree (–¥–µ—Ä–µ–≤–æ –ø—Ä–æ–µ–∫—Ç–∞)
require("nvim-tree").setup()
vim.api.nvim_set_keymap("n", "<leader>e", ":NvimTreeToggle<CR>", { noremap = true })

-- ‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º ToggleTerm (—Ç–µ—Ä–º–∏–Ω–∞–ª)
require("toggleterm").setup({
  open_mapping = [[<C-t>]],
  direction = "float",
})



require('tabnine').setup({
  disable_auto_comment=true,
  accept_keymap="<Tab>",
  dismiss_keymap = "<C-]>",
  debounce_ms = 800,
  suggestion_color = {gui = "#808080", cterm = 244},
  exclude_filetypes = {"TelescopePrompt", "NvimTree"},
  log_file_path = nil, -- absolute path to Tabnine log file
  ignore_certificate_errors = false,
})

-- require("gruvbox").setup({
--   transparent_mode = false, -- –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å (–º–æ–∂–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ü–≤–µ—Ç–∞)
-- })
-- vim.cmd("colorscheme gruvbox")
require("telescope").load_extension("ast_grep")
-- ‚úÖ –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
vim.api.nvim_set_keymap("n", "gd", "<cmd>lua vim.lsp.buf.definition()<CR>", { noremap = true })
vim.api.nvim_set_keymap("n", "gr", "<cmd>lua vim.lsp.buf.references()<CR>", { noremap = true })
vim.api.nvim_set_keymap("n", "<leader>f", "<cmd>lua vim.lsp.buf.format()<CR>", { noremap = true })
